{"version":3,"sources":["login/Logout.js","hub/Hub.js","hub/Zones.js","helpers/calendar.js","components/CustomInput.js","hub/Settings.js"],"names":["Component","baseapi","window","location","hostname","url","url2","controlUrl","zone","settings","Hub","_isMounted","makeChartJson","data","when","color","id","filter","x","map","y","i","myformatter","nr","divided","parseFloat","toFixed","toString","replace","extractPrices","temp","hours","key","hour","price","push","setState","handlePrices","length","MyResponsiveLine","chdata","margin","top","right","bottom","left","xScale","type","yScale","min","max","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","axisLeft","orient","state","currency","colors","scheme","pointSize","pointColor","from","modifiers","pointBorderWidth","pointBorderColor","pointLabel","pointLabelYOffset","enableSlices","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","style","itemBackground","chart","pricenow","name","average","tempis","measured","should","percent","today","tomorrow","prices","controls","tomspot","chartdata","console","log","this","props","pathname","d","Date","getHours","day","getDate","day1","month","getMonth","minutes","getMinutes","fetch","then","results","json","tis","curr","Currency","avg","Average","extract","results2","data2","chartdata1","chartdata2","chartdata3","results3","data3","catch","err","text","tdata","item","className","header","striped","bordered","hover","size","responsive","to","variant","block","Zones","sensor","dsm","away","is","items","response","result","zeroPad","getFullYear","value","padStart","isDate","date","Object","prototype","call","isValidDate","Number","isNaN","valueOf","getDateISO","join","CustomInput","onClick","placeholderText","React","urledit","control","propTypes","PropTypes","func","string","object","registerLocale","sv","Settings","handleAreaChange","event","updateSettings","handlePercentChange","handleCurrencyChange","getDsmText","what","undefined","getModeText","getModeVariant","handleControlChange","preventDefault","whatNow","percenton","handleDsmChange","dsmon","handleFromChange","dateval","startDate","handleToChange","toDate","col","val","method","body","headers","res","status","Error","error","setDefaultLocale","area","lat","long","awayto","awayfrom","test","bind","start","cont","percenttext","areatext","currencytext","lattext","longtext","fromtext","totext","onSelect","title","Item","eventKey","customInput","selected","dateFormat","locale","calendarClassName","showWeekNumbers","minDate","onChange"],"mappings":"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","file":"static/js/villains.0c395e77.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Logout extends Component {\n  state = {\n    heroToDelete: null,\n    showModal: false\n  };\n\n  componentDidMount() {\n    this.props.getHeroes();\n  }\n}","import React, { Component } from 'react';\nimport \"./Hub.css\";\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport { ResponsiveLine } from '@nivo/line';\n\nconst baseapi = 'http://' + window.location.hostname + ':1337';\nconst url = baseapi + \"/spotcal\";\nconst url2 = baseapi + \"/spotcal/2\";\nconst controlUrl = baseapi + \"/spotcal/control\";\nconst zone = baseapi + \"/zones/1\";\nconst settings = baseapi + \"/settings\";\n\nexport default class Hub extends Component {\n  _isMounted = false;\n\n  constructor() {\n    super();\n    this.state = {\n      pricenow: '0',\n      currency: 'öre/kwh',\n      hour: '0',\n      name: '',\n      average: '0',\n      tempis: '0',\n      measured: '0',\n      should: '0',\n      percent: '0',\n      today: '',\n      tomorrow: '',\n      hours: [],\n      prices: [],\n      controls: [],\n      tomspot: [],\n      chart: null,\n      chartdata: null\n    }\n  }\n\n  componentDidMount() {\n    console.log(window.location, this.props.location, this.props.location.pathname);\n    this._isMounted = true;\n    let d = new Date();\n    let hour = d.getHours();\n    let day = d.getDate();\n    let day1 = d.getDate() + 1;\n    let month = d.getMonth() + 1;\n    let today = day + \"/\" + month;\n    let tomorrow = day1 + \"/\" + month;\n    let minutes = d.getMinutes();\n    console.log(hour, minutes);\n\n\n    fetch(zone)\n    .then(results => {\n      //console.log(\"results\", results);\n      return results.json();\n    })\n    .then(data => {\n      if (this._isMounted) {\n        //console.log(\"data\", data);\n        let tis = data.tempis.toFixed(1);\n        this.setState({should: data.should});\n        this.setState({measured: data.measured});\n        this.setState({tempis: tis});\n        this.setState({name: data.name});\n        return fetch(url)\n      }\n    })\n    .then(results => {\n      //console.log(\"results\", results);\n      return results.json();\n    })\n    .then(data => {\n      if (this._isMounted) {\n        //console.log(data);\n        let key = 'Hour' + hour;\n        let curr = data.Currency === 'EUR' ? 'c/kwh' : 'öre/kwh';\n\n        let avg = this.myformatter(data.Average);\n        let pricenow = this.myformatter(data[key]);\n\n        let extract = this.extractPrices(data);\n\n        let temp = this.handlePrices(extract);\n        //console.log(\"data\", hour, data, avg);\n\n        let chartdata = this.makeChartJson(extract, 'idag', 'hsl(12,100%,46%)');\n\n        this.setState({average: avg});\n        this.setState({pricenow: pricenow});\n        this.setState({hour: hour});\n        this.setState({currency: curr});\n        this.setState({today: today});\n        this.setState({tomorrow: tomorrow});\n        this.setState({prices: temp});\n        this.setState({chartdata: chartdata});\n        this.MyResponsiveLine([this.state.chartdata]);\n        return fetch(controlUrl)\n      }\n    })\n    .then(results2 => {\n      console.log(\"results2\", results2);\n      return results2.json();\n    })\n    .then(data2 => {\n      console.log(\"data2\", data2);\n      this.setState({controls: data2});\n      if (hour >= 16 && minutes >= 3) {\n        return fetch(url2)\n        .then(results => {\n          //console.log(\"results\", results);\n          return results.json();\n        })\n        .then(data => {\n          let extract = this.extractPrices(data);\n          //console.log(extract);\n          let temp = this.handlePrices(extract);\n          let chartdata1 = this.state.chartdata;\n          let chartdata2 = this.makeChartJson(extract, 'imorgon', 'orange');\n          //console.log(\"Båda chartdata:\", chartdata1, chartdata2, typeof(chartdata1));\n          const chartdata3 = [];\n          if (chartdata1) chartdata3.push(chartdata1);\n          if (chartdata2) chartdata3.push(chartdata2);\n\n          this.setState({tomspot: temp});\n          //console.log(chartdata3);\n          this.MyResponsiveLine(chartdata3);\n          return fetch(settings)\n        })\n      } else {\n          return fetch(settings)\n      }\n    })\n    .then(results3 => {\n        console.log(results3);\n        return results3.json();\n    })\n    .then(data3 => {\n        this.setState({percent: data3.percent})\n    })\n    .catch(err => {\n      console.log(err);\n      if (err.name === 'AbortError') return;\n      throw err;\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  makeChartJson = (data, when, color) => {\n      //console.log(data);\n      let filtered = data.filter(x => x !== null);\n      let res = {\n          id: when,\n          color: color,\n          data: filtered.map((y, i) => ({\n            x: i < 9 ? `0${i+1}` : `${i+1}`,\n            y,\n          })),\n        };\n    //console.log(res);\n    return res;\n  }\n\n  myformatter = (nr) => {\n      let divided = (parseFloat(nr) / 10).toFixed(1);\n      divided = divided.toString();\n      divided = divided.replace(\".\", \",\");\n      if (nr === \"\") {\n          divided = null;\n      }\n      return divided;\n  }\n\n  extractPrices = (data) => {\n      let temp = [];\n      let hours = ['När'];\n      for (let i = 1; i < 25; i++) {\n          let key = 'Hour' + i;\n          let hour = i < 10 ? '0' + i : i + \"\";\n          let price = 0;\n          if (i === 3) {\n              key = 'Hour' + i + 'A';\n              price = data[key] === \"\" ? null : (parseFloat(data[key]) / 10).toFixed(1);\n              if (price) { \n                temp.push(price);\n                hours.push(hour);\n              }\n              //console.log(key, price);\n              key = 'Hour' + i + 'B';\n              hour = \"VT\";\n          }\n          price = data[key] === \"\" ? null : (parseFloat(data[key]) / 10).toFixed(1);\n          if (price) {\n            temp.push(price);\n            hours.push(hour);\n          }\n          //console.log( key, price);\n    }\n    //console.log(hours);\n    this.setState({hours: hours});\n    return temp;\n  }\n\n  handlePrices = (data) => {\n    let temp =[];\n      for (let i = 0; i < data.length; i++) {\n        let nr = data[i] === null ? data[i] : data[i].toString();\n        nr = nr === null ? nr : nr.replace(\".\", \",\");\n        temp.push(nr);\n      }\n    return temp;\n  }\n\n  MyResponsiveLine = (chdata) => {\n      //console.log(chdata);\n      let temp = (\n      <ResponsiveLine\n          data={chdata}\n          margin={{ top: 50, right: 20, bottom: 50, left: 45 }}\n          xScale={{ type: 'point' }}\n          yScale={{ type: 'linear', min: 0, max: 'auto' }}\n          axisTop={null}\n          axisRight={null}\n          axisBottom={{\n              tickSize: 5,\n              tickPadding: 5,\n              tickRotation: 0,\n              legend: 'spotpriser',\n              legendOffset: 35,\n              legendPosition: 'start'\n          }}\n          axisLeft={{\n              orient: 'left',\n              tickSize: 5,\n              tickPadding: 5,\n              tickRotation: 0,\n              legend: this.state.currency,\n              legendOffset: -35,\n              legendPosition: 'end'\n          }}\n          colors={{ scheme: 'set1' }}\n          pointSize={5}\n          pointColor={{ from: 'color', modifiers: [] }}\n          pointBorderWidth={2}\n          pointBorderColor={{ from: 'color' }}\n          pointLabel=\"y\"\n          pointLabelYOffset={60}\n          enableSlices=\"x\"\n          legends={[\n            {\n                anchor: 'top-left',\n                direction: 'row',\n                justify: false,\n                translateX: 10,\n                translateY: -40,\n                itemsSpacing: 0,\n                itemDirection: 'left-to-right',\n                itemWidth: 80,\n                itemHeight: 20,\n                itemOpacity: 0.75,\n                symbolSize: 10,\n                symbolShape: 'circle',\n                symbolBorderColor: 'rgba(0, 0, 0, .9)',\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemBackground: 'rgba(0, 0, 0, .08)',\n                            itemOpacity: 1\n                        }\n                    }\n                ]\n            }\n        ]}\n      />\n    )\n    this.setState({chart: temp});\n  }\n\n  render() {\n    let prices = this.state.prices;\n    let controls = this.state.controls;\n    let hours = this.state.hours;\n    let percent = this.state.percent;\n    let text = null;\n    let tdata = null;\n    if (this.state.hour > 16) {\n        text = <td>{this.state.tomorrow}</td>;\n        tdata = this.state.tomspot.map((item,i) => <td key = {i}>{item}</td>);\n    }\n\n    return (\n          <div className=\"hub-page\">\n            <p><span className=\"red-small larger-font\">{this.state.pricenow} </span>{this.state.currency} kl.{this.state.hour}\n            <br />Medelpris idag: <span className=\"red-small larger-font\">{this.state.average}</span> {this.state.currency}<br />{this.state.header}</p>\n\n            <Table striped bordered hover size=\"sm\" responsive className=\"mytable\">\n              <thead>\n                <tr>\n                  {hours.map((item,i) => <th key = {i}>{item}</th>)}\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>{this.state.today}</td>\n                  {prices.map((item,i) => <td key = {i}>{item}</td>)}\n                </tr>\n                <tr className=\"control\"><td>{percent + '%'}</td>{controls.map((item,i) => <td key = {i} className={'class' + item}></td>)}</tr>\n                <tr>{text}{tdata}</tr>\n              </tbody>\n            </Table>\n\n            <p>Temperatur {this.state.name}: <span className=\"red-small larger-font\">{this.state.tempis}</span> &deg;C\n            <br />Du önskar: <span  className=\"red-small larger-font\">{this.state.should}</span> &deg;C\n            <br />Uppmätt: {this.state.measured}</p>\n\n            <div className=\"chart\">\n              {this.state.chart}\n            </div>\n\n            <Link to=\"/settings\" className=\"btn btn-block\"><Button variant=\"light\" size=\"lg\" block>Alla inställningar</Button></Link>\n            <Link to=\"/zones\" className=\"btn btn-block\"><Button variant=\"light\" size=\"lg\" block>Zonerna</Button></Link>\n\n\n        </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport \"./Hub.css\";\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\n\nconst baseapi = 'http://' + window.location.hostname + ':1337';\nconst url = baseapi + \"/zones\";\n\nexport default class Zones extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      sensor: '',\n      should: '',\n      zone: '',\n      dsm: '',\n      away: '',\n      max: '',\n      min: '',\n      is: '',\n      measured: '',\n      items: []\n    }\n  }\n\n  componentDidMount() {\n    fetch(url)\n    .then(response => {\n      console.log(\"response\", response);\n      return response.json();\n    })\n    .then(result => {\n      console.log(result, result[0].measured);\n      this.setState({items: result});\n      this.setState({measured: result[0].measured});\n    })\n  }\n\n  render() {\n    let items = this.state.items;\n    return (\n      <div className=\"zones-page\">\n          <h1>Mätpunkter</h1>\n          <p>Senaste mätning: {this.state.measured}</p>\n          <div>\n            {items.map(item => {\n                let tempis = item.tempis.toFixed(1);\n                let divided = tempis.toString();\n                tempis = divided.replace(\".\", \",\");\n                return <span key={item.zone}>\n                <Link to={`/zone/${ item.id }`} className=\"btn btn-block\"><Button variant=\"light\" size=\"lg\" block><span className=\"tempis\">{tempis} &deg;C</span><span>{item.name}</span> <span className=\"should\">{item.should} &deg;C</span></Button></Link></span>\n            }\n            )}\n          </div>\n      </div>\n    );\n  }\n}\n","// (int) The current year\nexport const THIS_YEAR = +(new Date().getFullYear());\n\n// (int) The current month starting from 1 - 12\n// 1 => January, 12 => December\nexport const THIS_MONTH = +(new Date().getMonth()) + 1;\n\n// Week days names and shortnames\nexport const WEEK_DAYS = {\n  Sunday: \"Sun\",\n  Monday: \"Mon\",\n  Tuesday: \"Tue\",\n  Wednesday: \"Wed\",\n  Thursday: \"Thu\",\n  Friday: \"Fri\",\n  Saturday: \"Sat\"\n}\n\n// Calendar months names and shortnames\nexport const CALENDAR_MONTHS = {\n  January: \"Jan\",\n  February: \"Feb\",\n  March: \"Mar\",\n  April: \"Apr\",\n  May: \"May\",\n  June: \"Jun\",\n  July: \"Jul\",\n  August: \"Aug\",\n  September: \"Sep\",\n  October: \"Oct\",\n  November: \"Nov\",\n  December: \"Dec\"\n}\n\n// Weeks displayed on calendar\nexport const CALENDAR_WEEKS = 6;\n\n// Pads a string value with leading zeroes(0) until length is reached\n// For example: zeroPad(5, 2) => \"05\"\nexport const zeroPad = (value, length) => {\n  return `${value}`.padStart(length, '0');\n}\n\n// (int) Number days in a month for a given year from 28 - 31\nexport const getMonthDays = (month = THIS_MONTH, year = THIS_YEAR) => {\n  const months30 = [4, 6, 9, 11];\n  const leapYear = year % 4 === 0;\n\n  return month === 2\n    ? leapYear\n      ? 29\n      : 28\n    : months30.includes(month)\n      ? 30\n      : 31;\n}\n\n// (int) First day of the month for a given year from 1 - 7\n// 1 => Sunday, 7 => Saturday\nexport const getMonthFirstDay = (month = THIS_MONTH, year = THIS_YEAR) => {\n  return +(new Date(`${year}-${zeroPad(month, 2)}-01`).getDay()) + 1;\n}\n\n// (bool) Checks if a value is a date - this is just a simple check\nexport const isDate = date => {\n  const isDate = Object.prototype.toString.call(date) === '[object Date]';\n  const isValidDate = date && !Number.isNaN(date.valueOf());\n  \n  return isDate && isValidDate;\n}\n\n// (bool) Checks if two date values are of the same month and year\nexport const isSameMonth = (date, basedate = new Date()) => {\n  \n  if (!(isDate(date) && isDate(basedate))) return false;\n\n  const basedateMonth = +(basedate.getMonth()) + 1;\n  const basedateYear = basedate.getFullYear();\n\n  const dateMonth = +(date.getMonth()) + 1;\n  const dateYear = date.getFullYear();\n\n  return (+basedateMonth === +dateMonth) && (+basedateYear === +dateYear);\n  \n}\n\n// (bool) Checks if two date values are the same day\nexport const isSameDay = (date, basedate = new Date()) => {\n  \n  if (!(isDate(date) && isDate(basedate))) return false;\n\n  const basedateDate = basedate.getDate();\n  const basedateMonth = +(basedate.getMonth()) + 1;\n  const basedateYear = basedate.getFullYear();\n\n  const dateDate = date.getDate();\n  const dateMonth = +(date.getMonth()) + 1;\n  const dateYear = date.getFullYear();\n\n  return (+basedateDate === +dateDate) && (+basedateMonth === +dateMonth) && (+basedateYear === +dateYear);\n  \n}\n\n// (string) Formats the given date as YYYY-MM-DD\n// Months and Days are zero padded\nexport const getDateISO = (date = new Date()) => {\n  \n  if (!isDate(date)) return null;\n\n  return [\n    date.getFullYear(),\n    zeroPad(+date.getMonth() + 1, 2),\n    zeroPad(+date.getDate(), 2)\n  ].join('-');\n  \n}\n\n// ({month, year}) Gets the month and year before the given month and year\n// For example: getPreviousMonth(1, 2000) => {month: 12, year: 1999}\n// while: getPreviousMonth(12, 2000) => {month: 11, year: 2000}\nexport const getPreviousMonth = (month, year) => {\n  const prevMonth = (month > 1) ? month - 1 : 12;\n  const prevMonthYear = (month > 1) ? year : year - 1;\n\n  return { month: prevMonth, year: prevMonthYear };\n}\n\n// ({month, year}) Gets the month and year after the given month and year\n// For example: getNextMonth(1, 2000) => {month: 2, year: 2000}\n// while: getNextMonth(12, 2000) => {month: 1, year: 2001}\nexport const getNextMonth = (month, year) => {\n  const nextMonth = (month < 12) ? month + 1 : 1;\n  const nextMonthYear = (month < 12) ? year : year + 1;\n\n  return { month: nextMonth, year: nextMonthYear };\n}\n\n// Calendar builder for a month in the specified year\n// Returns an array of the calendar dates.\n// Each calendar date is represented as an array => [YYYY, MM, DD]\n\nexport default (month = THIS_MONTH, year = THIS_YEAR) => {\n  \n  // Get number of days in the month and the month's first day\n  \n  const monthDays = getMonthDays(month, year);\n  const monthFirstDay = getMonthFirstDay(month, year);\n\n  // Get number of days to be displayed from previous and next months\n  // These ensure a total of 42 days (6 weeks) displayed on the calendar\n  \n  const daysFromPrevMonth = monthFirstDay - 1;\n  const daysFromNextMonth = (CALENDAR_WEEKS * 7) - (daysFromPrevMonth + monthDays);\n\n  // Get the previous and next months and years\n  \n  const { month: prevMonth, year: prevMonthYear } = getPreviousMonth(month, year);\n  const { month: nextMonth, year: nextMonthYear } = getNextMonth(month, year);\n\n  // Get number of days in previous month\n  const prevMonthDays = getMonthDays(prevMonth, prevMonthYear);\n\n  // Builds dates to be displayed from previous month\n  \n  const prevMonthDates = [...new Array(daysFromPrevMonth)].map((n, index) => {\n    const day = index + 1 + (prevMonthDays - daysFromPrevMonth);\n    return [ prevMonthYear, zeroPad(prevMonth, 2), zeroPad(day, 2) ];\n  });\n\n  // Builds dates to be displayed from current month\n  \n  const thisMonthDates = [...new Array(monthDays)].map((n, index) => {\n    const day = index + 1;\n    return [year, zeroPad(month, 2), zeroPad(day, 2)];\n  });\n\n  // Builds dates to be displayed from next month\n  \n  const nextMonthDates = [...new Array(daysFromNextMonth)].map((n, index) => {\n    const day = index + 1;\n    return [nextMonthYear, zeroPad(nextMonth, 2), zeroPad(day, 2)];\n  });\n\n  // Combines all dates from previous, current and next months\n  return [ ...prevMonthDates, ...thisMonthDates, ...nextMonthDates ];\n  \n}","import React from 'react';\n\nclass CustomInput extends React.Component {\n\n  render () {\n    return (\n      <button\n        className=\"btn-primary btn-light\"\n        onClick={this.props.onClick}>\n        {this.props.placeholderText}\n      </button>\n    )\n  }\n}\n\nexport default CustomInput;\n","import React, { Component } from 'react';\nimport \"./Hub.css\";\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport {getDateISO} from \"../helpers/calendar\";\nimport DatePicker, { registerLocale, setDefaultLocale } from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { sv } from 'date-fns/locale';\n//import { format, formatDistance, formatRelative, subDays } from 'date-fns';\nimport CustomInput from \"../components/CustomInput\";\nimport PropTypes from 'prop-types';\n\nconst baseapi = 'http://' + window.location.hostname + ':1337';\n\nconst url = baseapi + \"/settings\";\nconst urledit = baseapi + \"/editsettings\";\nconst control = baseapi + \"/hourcontrol\";\n\n/*\nimport calendar, {\n  isDate,\n  isSameDay,\n  isSameMonth,\n  getDateISO,\n  getNextMonth,\n  getPreviousMonth,\n  WEEK_DAYS,\n  CALENDAR_MONTHS\n} from \"../helpers/calendar\";*/\n\nCustomInput.propTypes = {\n  onClick: PropTypes.func,\n  value: PropTypes.string,\n  placeholderText: PropTypes.object\n};\n\nregisterLocale('sv', sv);\nconsole.log(sv);\n\nexport default class Settings extends Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n    registerLocale(\"sv\", sv);\n    setDefaultLocale(\"sv\");\n    this.state = {\n      dsmon: 0,\n      currency: \"currency\",\n      area: \"area\",\n      percenton: 0,\n      percent: 0,\n      lat: \"Latitud\",\n      long: \"Longitud\",\n      awayto: \"\",\n      awayfrom: \"\",\n      startDate: new Date(),\n      toDate: new Date(),\n      test: getDateISO(\"2019-07-23\"),\n    }\n    this.handleAreaChange = this.handleAreaChange.bind(this);\n    this.handlePercentChange = this.handlePercentChange.bind(this);\n    this.handleCurrencyChange = this.handleCurrencyChange.bind(this);\n    this.handleDsmChange = this.handleDsmChange.bind(this);\n    this.handleFromChange = this.handleFromChange.bind(this);\n    this.handleToChange = this.handleToChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    fetch(url)\n    .then(results => {\n      //console.log(results);\n      return results.json();\n    })\n    .then(data => {\n      // eslint-disable-next-line\n      if (this._isMounted) {\n        console.log(data);\n        this.setState({area: data.area});\n        this.setState({currency: data.currency});\n        this.setState({lat: data.lat});\n        this.setState({long: data.long});\n        this.setState({percent: data.percent});\n        this.setState({percenton: data.percenton});\n        this.setState({dsmon: data.dsmon});\n        let from = data.awayfrom !== null ? data.awayfrom : this.state.awayfrom;\n        let to = data.awayfrom !== null ? data.awayto : this.state.awayto;\n        this.setState({awayfrom: from});\n        this.setState({awayto: to});\n        let start = data.awayfrom !== null ? new Date(data.awayfrom) : new Date();\n        let cont = data.awayfrom !== null ? new Date(data.awayfrom) : new Date();\n        this.setState({startDate: start});\n        this.setState({toDate: cont});\n      }\n    })\n    .catch(err => {\n      console.log(err);\n      if (err.name === 'AbortError') return;\n      throw err;\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n\n  handleAreaChange = (event) => {\n    console.log('Area:' + event);\n    this.updateSettings(\"area\", event);\n  }\n\n  handlePercentChange = (event) => {\n    console.log('Percent:' + event);\n    this.updateSettings(\"percent\", event);\n  }\n\n  handleCurrencyChange = (event) => {\n      console.log(\"Currency:\", event);\n      this.updateSettings(\"currency\", event);\n  }\n\n  getDsmText = (what) => {\n    if (what !== undefined) {\n        return what === 1 ? \"Elnätsbolag styr\" : \"Elnätsbolag styr ej\";\n    }\n  }\n\n  getModeText = (what) => {\n    if (what !== undefined) {\n        return what === 1 ? \"Du styr enligt elpris\" : \"Du styr ej enligt elpris\";\n    }\n  }\n\n  getModeVariant = (what) => {\n      console.log(what, typeof(what));\n    if (what !== undefined) {\n      return what === 1 ? \"success\" : \"danger\";\n    }\n  }\n\n  handleControlChange = (what, event) => {\n      console.log(what, event);\n    event.preventDefault();\n    if (what !== undefined) {\n      let whatNow = what === 1 ? 0 : 1;\n      console.log(\"Det var \" + what + \" Ska nu vara: \", whatNow)\n      this.updateSettings(\"percenton\", whatNow);\n      fetch(control)\n      .then( results => {\n          return results.json();\n      })\n      .then( data => {\n          console.log(data);\n          this.setState({percenton: whatNow});\n      })\n      .catch(err => {\n        console.log(err);\n        if (err.name === 'AbortError') return;\n        throw err;\n      });\n    }\n  }\n\n  handleDsmChange = (what, event) => {\n    console.log(\"Dsm: \", what, event);\n    event.preventDefault();\n    if (what !== undefined) {\n      let whatNow = what === 1 ? 0 : 1;\n      console.log(\"Det var \" + what + \" Ska nu vara: \", whatNow)\n      this.updateSettings(\"dsmon\", whatNow);\n      fetch(control)\n      .then( results => {\n          return results.json();\n      })\n      .then( data => {\n          console.log(data);\n          this.setState({dsmon: whatNow});\n      })\n      .catch(err => {\n        console.log(err);\n        if (err.name === 'AbortError') return;\n        throw err;\n      });\n    }\n  }\n\n  handleFromChange = (event) => {\n      console.log(\"From:\", getDateISO(event));\n      this.updateSettings(\"awayfrom\", getDateISO(event));\n      let dateval = new Date(getDateISO(event));\n      this.setState({startDate: dateval});\n  }\n\n  handleToChange = (event) => {\n      console.log(\"To:\", getDateISO(event));\n      this.updateSettings(\"awayto\", getDateISO(event));\n      let dateval = new Date(getDateISO(event));\n      this.setState({toDate: dateval});\n  }\n\n  updateSettings = (col, val) => {\n    console.log(col, val);\n    fetch(urledit, {\n      method: 'POST',\n      body: 'column=' + col + '&value=' + val+ '&id=' + 1,\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    })\n    .then(res => {\n      console.log(res);\n      if (res.status === 201) {\n        console.log(\"Uppdaterat\");\n        this.setState({\n          [col]: val\n        });\n        console.log(this.state);\n      } else {\n        const error = new Error(res.error);\n        throw error;\n      }\n    })\n    .catch(err => {\n      console.error(err);\n    });\n  }\n\n  render() {\n    let percenttext = <span><span className='redtext'>{ this.state.percent }</span> &#37;</span>;\n    let areatext = <span>Område <span className='redtext'>{ this.state.area }</span></span>;\n    let currencytext = <span>Valuta <span className='redtext'>{ this.state.currency }</span></span>;\n    let lattext = <span>Latitud <span className='redtext'>{ this.state.lat }</span></span>;\n    let longtext = <span>Longitud <span className='redtext'>{ this.state.long }</span></span>;\n    let fromtext = <span><span className='twofive'>Bortrest från: </span><span className='redtext'>{ this.state.awayfrom }</span></span>;\n    let totext = <span><span className='twofive'>Bortrest till: </span><span className='redtext'>{ this.state.awayto }</span></span>;\n\n    return (\n      <div className=\"hub-page\">\n        <h1>Inställningar</h1>\n        <div className=\"d-flex flex-column\">\n          <div className=\"dropContainer\">\n            <ToggleButton type=\"checkbox\" className=\"settings-toggle\" onClick={this.handleControlChange.bind(this, this.state.percenton)} variant={this.getModeVariant(this.state.percenton)} >\n              {this.getModeText(this.state.percenton)}\n            </ToggleButton>\n          </div>\n          <div className=\"dropContainer\">\n            <ToggleButton type=\"checkbox\" className=\"settings-toggle\" onClick={this.handleDsmChange.bind(this, this.state.dsmon)} variant={this.getModeVariant(this.state.dsmon)} >\n              {this.getDsmText(this.state.dsmon)}\n            </ToggleButton>\n          </div>\n        </div>\n        <DropdownButton id=\"dropdown-area\" onSelect={this.handleAreaChange} title={areatext}>\n            <Dropdown.Item eventKey=\"SE1\">SE1</Dropdown.Item>\n            <Dropdown.Item eventKey=\"SE2\">SE2</Dropdown.Item>\n            <Dropdown.Item eventKey=\"SE3\">SE3</Dropdown.Item>\n            <Dropdown.Item eventKey=\"SE4\">SE4</Dropdown.Item>\n            <Dropdown.Item eventKey=\"SP1\">SP1</Dropdown.Item>\n            <Dropdown.Item eventKey=\"DK1\">DK1</Dropdown.Item>\n            <Dropdown.Item eventKey=\"EE\">EE</Dropdown.Item>\n            <Dropdown.Item eventKey=\"FI\">FI</Dropdown.Item>\n            <Dropdown.Item eventKey=\"LT\">LT</Dropdown.Item>\n            <Dropdown.Item eventKey=\"LV\">LV</Dropdown.Item>\n            <Dropdown.Item eventKey=\"NO1\">NO1</Dropdown.Item>\n            <Dropdown.Item eventKey=\"NO2\">NO2</Dropdown.Item>\n            <Dropdown.Item eventKey=\"NO3\">NO3</Dropdown.Item>\n            <Dropdown.Item eventKey=\"NO4\">NO4</Dropdown.Item>\n            <Dropdown.Item eventKey=\"NO5\">NO5</Dropdown.Item>\n        </DropdownButton>\n        <DropdownButton id=\"dropdown-currency\" onSelect={this.handleCurrencyChange} title={currencytext}>\n            <Dropdown.Item eventKey=\"SEK\">SEK</Dropdown.Item>\n            <Dropdown.Item eventKey=\"DKK\">DKK</Dropdown.Item>\n            <Dropdown.Item eventKey=\"NOK\">NOK</Dropdown.Item>\n            <Dropdown.Item eventKey=\"EUR\">EUR</Dropdown.Item>\n        </DropdownButton>\n        <DropdownButton id=\"dropdown-percent\" onSelect={this.handlePercentChange} title={percenttext}>\n            <Dropdown.Item eventKey=\"0\">0</Dropdown.Item>\n            <Dropdown.Item eventKey=\"1\">1</Dropdown.Item>\n            <Dropdown.Item eventKey=\"2\">2</Dropdown.Item>\n            <Dropdown.Item eventKey=\"3\">3</Dropdown.Item>\n            <Dropdown.Item eventKey=\"4\">4</Dropdown.Item>\n            <Dropdown.Item eventKey=\"5\">5</Dropdown.Item>\n            <Dropdown.Item eventKey=\"6\">6</Dropdown.Item>\n            <Dropdown.Item eventKey=\"7\">7</Dropdown.Item>\n            <Dropdown.Item eventKey=\"8\">8</Dropdown.Item>\n            <Dropdown.Item eventKey=\"9\">9</Dropdown.Item>\n            <Dropdown.Item eventKey=\"10\">10</Dropdown.Item>\n            <Dropdown.Item eventKey=\"11\">11</Dropdown.Item>\n            <Dropdown.Item eventKey=\"12\">12</Dropdown.Item>\n            <Dropdown.Item eventKey=\"13\">13</Dropdown.Item>\n            <Dropdown.Item eventKey=\"14\">14</Dropdown.Item>\n            <Dropdown.Item eventKey=\"15\">15</Dropdown.Item>\n            <Dropdown.Item eventKey=\"16\">16</Dropdown.Item>\n            <Dropdown.Item eventKey=\"17\">17</Dropdown.Item>\n            <Dropdown.Item eventKey=\"18\">18</Dropdown.Item>\n            <Dropdown.Item eventKey=\"19\">19</Dropdown.Item>\n            <Dropdown.Item eventKey=\"20\">20</Dropdown.Item>\n        </DropdownButton>\n        <Button variant=\"light\" size=\"lg\" block><Link to=\"/settings\" className=\"buttonstyle\">{lattext}</Link></Button>\n        <Button variant=\"light\" size=\"lg\" block><Link to=\"/settings\" className=\"buttonstyle\">{longtext}</Link></Button>\n        <div className=\"btn-light btn-block\">\n          <DatePicker\n            customInput={<CustomInput placeholderText={fromtext} />}\n            selected={this.state.startDate}\n            dateFormat=\"yyyy-MM-dd\"\n            locale=\"sv\"\n            className=\".btn-primary datefrom\"\n            calendarClassName=\"datefrom\"\n            showWeekNumbers\n            minDate={new Date()}\n            onChange={this.handleFromChange}\n          /></div>\n          <div className=\"btn-light btn-block\">\n          <DatePicker\n            customInput={<CustomInput placeholderText={totext} />}\n            selected={this.state.toDate}\n            dateFormat=\"yyyy-MM-dd\"\n            locale=\"sv\"\n            className=\".btn-primary dateto\"\n            calendarClassName=\"dateto\"\n            minDate={new Date(this.state.awayfrom)}\n            showWeekNumbers\n            onChange={this.handleToChange}\n          />\n        </div>\n        <Button variant=\"light\" size=\"lg\" block><Link to=\"/zones\" className=\"buttonstyle\">Dina zoner</Link></Button>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}