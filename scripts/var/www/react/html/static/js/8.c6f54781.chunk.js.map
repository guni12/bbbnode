{"version":3,"sources":["sensors/Sensors.js"],"names":["url","window","location","hostname","Sensors","state","name","sensor","sensors","fetch","then","response","json","result","console","log","setState","items","this","className","map","item","divided","tempis","toFixed","toString","replace","key","id","to","variant","size","block","Component"],"mappings":"4OAMMA,EADU,UAAYC,OAAOC,SAASC,SAAW,QACjC,eAEDC,E,YACnB,aAAe,IAAD,8BACZ,+CACKC,MAAQ,CACXC,KAAM,GACNC,OAAQ,GACRC,QAAS,IALC,E,iFASO,IAAD,OAClBC,MAAMT,GACLU,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAG,GACJC,QAAQC,IAAI,SAAUF,GACtB,EAAKG,SAAS,CAACR,QAASK,IACxBC,QAAQC,IAAI,qBAAsB,EAAKV,MAAMG,c,+BAK/C,IAAIS,EAAQC,KAAKb,MAAMG,QAEvB,OACE,yBAAKW,UAAU,cACX,wCACA,6BACGF,EAAMG,KAAI,SAAAC,GACP,IACIC,EADMD,EAAKE,OAAOC,QAAQ,GACZC,WAElB,OADAH,EAAUA,EAAQI,QAAQ,IAAK,KACxB,0BAAMC,IAAKN,EAAKO,IACvB,kBAAC,IAAD,CAAMC,GAAE,kBAAcR,EAAKO,IAAOT,UAAU,iBAAgB,kBAAC,IAAD,CAAQW,QAAQ,QAAQC,KAAK,KAAKC,OAAK,GAAC,0BAAMb,UAAU,UAAUG,EAA1B,UAAxC,IAAyF,0BAAMH,UAAU,QAAQE,EAAKf,MAAtH,IAAmI,0BAAMa,UAAU,UAAUE,EAAKd,OAA/B,iB,GAlC1K0B","file":"static/js/8.c6f54781.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport \"../hub/Hub.css\";\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\n\nconst baseapi = 'http://' + window.location.hostname + ':1337';\nconst url = baseapi + \"/showsensors\";\n\nexport default class Sensors extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      sensor: '',\n      sensors: []\n    }\n  }\n\n  componentDidMount() {\n    fetch(url)\n    .then(response => {\n      return response.json();\n    })\n    .then(result => {\n      console.log(\"result\", result);\n      this.setState({sensors: result});\n      console.log(\"this.state.sensors\", this.state.sensors);\n    })\n  }\n\n  render() {\n    let items = this.state.sensors;\n\n    return (\n      <div className=\"zones-page\">\n          <h1>Sensorer</h1>\n          <div>\n            {items.map(item => {\n                let tis = item.tempis.toFixed(1);\n                let divided = tis.toString();\n                divided = divided.replace(\".\", \",\");\n                return <span key={item.id}>\n                <Link to={`/sensor/${ item.id }`} className=\"btn btn-block\"><Button variant=\"light\" size=\"lg\" block><span className=\"tempis\">{divided} &deg;C</span> <span className=\"zone\">{item.name}</span> <span className=\"should\">{item.sensor} </span></Button></Link></span>\n            }\n            )}\n          </div>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}