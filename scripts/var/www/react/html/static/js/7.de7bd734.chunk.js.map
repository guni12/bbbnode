{"version":3,"sources":["hub/Zones.js"],"names":["url","window","location","hostname","Zones","state","name","sensor","should","zone","dsm","away","max","min","is","measured","items","fetch","then","response","console","log","json","result","setState","this","className","map","item","tempis","toFixed","divided","toString","replace","key","to","id","variant","size","block","Component"],"mappings":"4OAMMA,EADU,UAAYC,OAAOC,SAASC,SAAW,QACjC,SAEDC,E,YACnB,aAAe,IAAD,8BACZ,+CACKC,MAAQ,CACXC,KAAM,GACNC,OAAQ,GACRC,OAAQ,GACRC,KAAM,GACNC,IAAK,GACLC,KAAM,GACNC,IAAK,GACLC,IAAK,GACLC,GAAI,GACJC,SAAU,GACVC,MAAO,IAbG,E,iFAiBO,IAAD,OAClBC,MAAMjB,GACLkB,MAAK,SAAAC,GAEJ,OADAC,QAAQC,IAAI,WAAYF,GACjBA,EAASG,UAEjBJ,MAAK,SAAAK,GACJH,QAAQC,IAAIE,EAAQA,EAAO,GAAGR,UAC9B,EAAKS,SAAS,CAACR,MAAOO,IACtB,EAAKC,SAAS,CAACT,SAAUQ,EAAO,GAAGR,gB,+BAKrC,IAAIC,EAAQS,KAAKpB,MAAMW,MACvB,OACE,yBAAKU,UAAU,cACX,4BAAI,0BAAMA,UAAU,UAAhB,iBAAJ,gBAAqD,0BAAMA,UAAU,UAAhB,mBACrD,iDAAmB,6BAAOD,KAAKpB,MAAMU,UACrC,6BACGC,EAAMW,KAAI,SAAAC,GACP,IAAIC,EAASD,EAAKC,OAAOC,QAAQ,GAC7BC,EAAUF,EAAOG,WAErB,OADAH,EAASE,EAAQE,QAAQ,IAAK,KACvB,0BAAMC,IAAKN,EAAKnB,MACvB,kBAAC,IAAD,CAAM0B,GAAE,gBAAYP,EAAKQ,IAAOV,UAAU,iBAAgB,kBAAC,IAAD,CAAQW,QAAQ,QAAQC,KAAK,KAAKC,OAAK,GAAC,0BAAMb,UAAU,UAAUG,EAA1B,UAA+C,0BAAMH,UAAU,QAAQE,EAAKtB,MAApH,IAAiI,0BAAMoB,UAAU,UAAUE,EAAKpB,OAA/B,sB,GA3CxKgC","file":"static/js/7.de7bd734.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport \"./Hub.css\";\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\n\nconst baseapi = 'http://' + window.location.hostname + ':1337';\nconst url = baseapi + \"/zones\";\n\nexport default class Zones extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      sensor: '',\n      should: '',\n      zone: '',\n      dsm: '',\n      away: '',\n      max: '',\n      min: '',\n      is: '',\n      measured: '',\n      items: []\n    }\n  }\n\n  componentDidMount() {\n    fetch(url)\n    .then(response => {\n      console.log(\"response\", response);\n      return response.json();\n    })\n    .then(result => {\n      console.log(result, result[0].measured);\n      this.setState({items: result});\n      this.setState({measured: result[0].measured});\n    })\n  }\n\n  render() {\n    let items = this.state.items;\n    return (\n      <div className=\"zones-page\">\n          <h1><span className=\"tempis\">Ärvärde</span>Mätpunkter<span className=\"should\">Börvärde</span></h1>\n          <p>Senaste mätning:<br />{this.state.measured}</p>\n          <div>\n            {items.map(item => {\n                let tempis = item.tempis.toFixed(1);\n                let divided = tempis.toString();\n                tempis = divided.replace(\".\", \",\");\n                return <span key={item.zone}>\n                <Link to={`/zone/${ item.id }`} className=\"btn btn-block\"><Button variant=\"light\" size=\"lg\" block><span className=\"tempis\">{tempis} &deg;C</span><span className=\"zone\">{item.name}</span> <span className=\"should\">{item.should} &deg;C</span></Button></Link></span>\n            }\n            )}\n          </div>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}