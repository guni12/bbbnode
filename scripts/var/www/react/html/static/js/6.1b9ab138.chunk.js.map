{"version":3,"sources":["helpers/calendar.js","components/CustomInput.js","hub/Settings.js"],"names":["zeroPad","Date","getFullYear","getMonth","value","length","padStart","isDate","date","Object","prototype","toString","call","isValidDate","Number","isNaN","valueOf","getDateISO","getDate","join","CustomInput","className","onClick","this","props","placeholderText","React","Component","baseapi","window","location","protocol","host","url","urledit","spot","control","tempc","hourc","propTypes","PropTypes","func","string","object","registerLocale","sv","Settings","_isMounted","checkAway","awayfrom","awayto","state","console","log","updateSettings","setState","startDate","toDate","updates","handleAreaChange","event","handlePercentChange","handleCurrencyChange","fetch","then","spotresults","json","spotdata","controlresults","data","tempresults","tempdata","hourresults","hourdata","catch","err","name","getDsmText","what","undefined","getModeText","getModeVariant","handleControlChange","preventDefault","whatNow","handleDsmChange","handleFromChange","dateval","handleToChange","col","val","method","body","headers","res","status","Error","error","setDefaultLocale","dsmon","currency","area","percenton","percent","lat","long","test","bind","results","start","cont","percenttext","areatext","currencytext","fromtext","totext","type","variant","id","onSelect","title","Item","eventKey","customInput","selected","dateFormat","locale","calendarClassName","showWeekNumbers","minDate","onChange"],"mappings":"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","file":"static/js/6.1b9ab138.chunk.js","sourcesContent":["// (int) The current year\nexport const THIS_YEAR = +(new Date().getFullYear());\n\n// (int) The current month starting from 1 - 12\n// 1 => January, 12 => December\nexport const THIS_MONTH = +(new Date().getMonth()) + 1;\n\n// Week days names and shortnames\nexport const WEEK_DAYS = {\n  Sunday: \"Sun\",\n  Monday: \"Mon\",\n  Tuesday: \"Tue\",\n  Wednesday: \"Wed\",\n  Thursday: \"Thu\",\n  Friday: \"Fri\",\n  Saturday: \"Sat\"\n}\n\n// Calendar months names and shortnames\nexport const CALENDAR_MONTHS = {\n  January: \"Jan\",\n  February: \"Feb\",\n  March: \"Mar\",\n  April: \"Apr\",\n  May: \"May\",\n  June: \"Jun\",\n  July: \"Jul\",\n  August: \"Aug\",\n  September: \"Sep\",\n  October: \"Oct\",\n  November: \"Nov\",\n  December: \"Dec\"\n}\n\n// Weeks displayed on calendar\nexport const CALENDAR_WEEKS = 6;\n\n// Pads a string value with leading zeroes(0) until length is reached\n// For example: zeroPad(5, 2) => \"05\"\nexport const zeroPad = (value, length) => {\n  return `${value}`.padStart(length, '0');\n}\n\n// (int) Number days in a month for a given year from 28 - 31\nexport const getMonthDays = (month = THIS_MONTH, year = THIS_YEAR) => {\n  const months30 = [4, 6, 9, 11];\n  const leapYear = year % 4 === 0;\n\n  return month === 2\n    ? leapYear\n      ? 29\n      : 28\n    : months30.includes(month)\n      ? 30\n      : 31;\n}\n\n// (int) First day of the month for a given year from 1 - 7\n// 1 => Sunday, 7 => Saturday\nexport const getMonthFirstDay = (month = THIS_MONTH, year = THIS_YEAR) => {\n  return +(new Date(`${year}-${zeroPad(month, 2)}-01`).getDay()) + 1;\n}\n\n// (bool) Checks if a value is a date - this is just a simple check\nexport const isDate = date => {\n  const isDate = Object.prototype.toString.call(date) === '[object Date]';\n  const isValidDate = date && !Number.isNaN(date.valueOf());\n  \n  return isDate && isValidDate;\n}\n\n// (bool) Checks if two date values are of the same month and year\nexport const isSameMonth = (date, basedate = new Date()) => {\n  \n  if (!(isDate(date) && isDate(basedate))) return false;\n\n  const basedateMonth = +(basedate.getMonth()) + 1;\n  const basedateYear = basedate.getFullYear();\n\n  const dateMonth = +(date.getMonth()) + 1;\n  const dateYear = date.getFullYear();\n\n  return (+basedateMonth === +dateMonth) && (+basedateYear === +dateYear);\n  \n}\n\n// (bool) Checks if two date values are the same day\nexport const isSameDay = (date, basedate = new Date()) => {\n  \n  if (!(isDate(date) && isDate(basedate))) return false;\n\n  const basedateDate = basedate.getDate();\n  const basedateMonth = +(basedate.getMonth()) + 1;\n  const basedateYear = basedate.getFullYear();\n\n  const dateDate = date.getDate();\n  const dateMonth = +(date.getMonth()) + 1;\n  const dateYear = date.getFullYear();\n\n  return (+basedateDate === +dateDate) && (+basedateMonth === +dateMonth) && (+basedateYear === +dateYear);\n  \n}\n\n// (string) Formats the given date as YYYY-MM-DD\n// Months and Days are zero padded\nexport const getDateISO = (date = new Date()) => {\n  \n  if (!isDate(date)) return null;\n\n  return [\n    date.getFullYear(),\n    zeroPad(+date.getMonth() + 1, 2),\n    zeroPad(+date.getDate(), 2)\n  ].join('-');\n  \n}\n\n// ({month, year}) Gets the month and year before the given month and year\n// For example: getPreviousMonth(1, 2000) => {month: 12, year: 1999}\n// while: getPreviousMonth(12, 2000) => {month: 11, year: 2000}\nexport const getPreviousMonth = (month, year) => {\n  const prevMonth = (month > 1) ? month - 1 : 12;\n  const prevMonthYear = (month > 1) ? year : year - 1;\n\n  return { month: prevMonth, year: prevMonthYear };\n}\n\n// ({month, year}) Gets the month and year after the given month and year\n// For example: getNextMonth(1, 2000) => {month: 2, year: 2000}\n// while: getNextMonth(12, 2000) => {month: 1, year: 2001}\nexport const getNextMonth = (month, year) => {\n  const nextMonth = (month < 12) ? month + 1 : 1;\n  const nextMonthYear = (month < 12) ? year : year + 1;\n\n  return { month: nextMonth, year: nextMonthYear };\n}\n\n// Calendar builder for a month in the specified year\n// Returns an array of the calendar dates.\n// Each calendar date is represented as an array => [YYYY, MM, DD]\n\nexport default (month = THIS_MONTH, year = THIS_YEAR) => {\n  \n  // Get number of days in the month and the month's first day\n  \n  const monthDays = getMonthDays(month, year);\n  const monthFirstDay = getMonthFirstDay(month, year);\n\n  // Get number of days to be displayed from previous and next months\n  // These ensure a total of 42 days (6 weeks) displayed on the calendar\n  \n  const daysFromPrevMonth = monthFirstDay - 1;\n  const daysFromNextMonth = (CALENDAR_WEEKS * 7) - (daysFromPrevMonth + monthDays);\n\n  // Get the previous and next months and years\n  \n  const { month: prevMonth, year: prevMonthYear } = getPreviousMonth(month, year);\n  const { month: nextMonth, year: nextMonthYear } = getNextMonth(month, year);\n\n  // Get number of days in previous month\n  const prevMonthDays = getMonthDays(prevMonth, prevMonthYear);\n\n  // Builds dates to be displayed from previous month\n  \n  const prevMonthDates = [...new Array(daysFromPrevMonth)].map((n, index) => {\n    const day = index + 1 + (prevMonthDays - daysFromPrevMonth);\n    return [ prevMonthYear, zeroPad(prevMonth, 2), zeroPad(day, 2) ];\n  });\n\n  // Builds dates to be displayed from current month\n  \n  const thisMonthDates = [...new Array(monthDays)].map((n, index) => {\n    const day = index + 1;\n    return [year, zeroPad(month, 2), zeroPad(day, 2)];\n  });\n\n  // Builds dates to be displayed from next month\n  \n  const nextMonthDates = [...new Array(daysFromNextMonth)].map((n, index) => {\n    const day = index + 1;\n    return [nextMonthYear, zeroPad(nextMonth, 2), zeroPad(day, 2)];\n  });\n\n  // Combines all dates from previous, current and next months\n  return [ ...prevMonthDates, ...thisMonthDates, ...nextMonthDates ];\n  \n}","import React from 'react';\n\nclass CustomInput extends React.Component {\n\n  render () {\n    return (\n      <button\n        className=\"btn-primary btn-light\"\n        onClick={this.props.onClick}>\n        {this.props.placeholderText}\n      </button>\n    )\n  }\n}\n\nexport default CustomInput;\n","import React, { Component } from 'react';\nimport \"./Hub.css\";\n//import Button from 'react-bootstrap/Button';\n//import { Link } from 'react-router-dom';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport {getDateISO} from \"../helpers/calendar\";\nimport DatePicker, { registerLocale, setDefaultLocale } from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { sv } from 'date-fns/locale';\n//import { format, formatDistance, formatRelative, subDays } from 'date-fns';\nimport CustomInput from \"../components/CustomInput\";\nimport PropTypes from 'prop-types';\n\nconst baseapi = window.location.protocol + \"//\" + window.location.host + \"/api\";\n\nconst url = baseapi + \"/settings\";\nconst urledit = baseapi + \"/editsettings\";\nconst spot = baseapi + \"/spotcal\";\nconst control = baseapi + \"/controlupdate\";\nconst tempc = baseapi + \"/tempupdate\";\nconst hourc = baseapi + \"/hourcontrol\";\n\n/*\nimport calendar, {\n  isDate,\n  isSameDay,\n  isSameMonth,\n  getDateISO,\n  getNextMonth,\n  getPreviousMonth,\n  WEEK_DAYS,\n  CALENDAR_MONTHS\n} from \"../helpers/calendar\";*/\n\nCustomInput.propTypes = {\n  onClick: PropTypes.func,\n  value: PropTypes.string,\n  placeholderText: PropTypes.object\n};\n\nregisterLocale('sv', sv);\n\nexport default class Settings extends Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n    //console.log(props);\n\n    registerLocale(\"sv\", sv);\n    setDefaultLocale(\"sv\");\n    this.state = {\n      dsmon: 0,\n      currency: \"currency\",\n      area: \"area\",\n      percenton: 0,\n      percent: 0,\n      lat: \"Latitud\",\n      long: \"Longitud\",\n      awayto: \"\",\n      awayfrom: \"\",\n      startDate: new Date(),\n      toDate: new Date(),\n      test: getDateISO(\"2019-07-23\"),\n    }\n    this.handleAreaChange = this.handleAreaChange.bind(this);\n    this.handlePercentChange = this.handlePercentChange.bind(this);\n    this.handleCurrencyChange = this.handleCurrencyChange.bind(this);\n    this.handleDsmChange = this.handleDsmChange.bind(this);\n    this.handleFromChange = this.handleFromChange.bind(this);\n    this.handleToChange = this.handleToChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    fetch(url)\n    .then(results => {\n      //console.log(results);\n      return results.json();\n    })\n    .then(data => {\n      // eslint-disable-next-line\n      if (this._isMounted) {\n        console.log(data);\n        this.setState({area: data.area});\n        this.setState({currency: data.currency});\n        this.setState({lat: data.lat});\n        this.setState({long: data.long});\n        this.setState({percent: data.percent});\n        this.setState({percenton: data.percenton});\n        this.setState({dsmon: data.dsmon});\n        this.setState({awayfrom: data.awayfrom});\n        this.setState({awayto: data.awayto});\n        let start = data.awayfrom !== null ? new Date(data.awayfrom) : new Date();\n        let cont = data.awayfrom !== null ? new Date(data.awayfrom) : new Date();\n        this.setState({startDate: start});\n        this.setState({toDate: cont});\n        this.checkAway(data.awayfrom, data.awayto);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n      if (err.name === 'AbortError') return;\n      throw err;\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  checkAway = (awayfrom, awayto) => {\n    //console.log(this.state);\n\n    if (this.state.awayto && (new Date(awayto) < new Date() ||\n        new Date(awayto) < new Date(awayfrom))) {\n        console.log(\"SLÄNG\", new Date(awayto));\n        this.updateSettings(\"awayfrom\", \"null\");\n        this.updateSettings(\"awayto\", \"null\");\n        this.setState({startDate: new Date()});\n        this.setState({toDate: new Date()});\n        this.updates();\n    }\n  }\n\n\n  handleAreaChange = (event) => {\n    console.log('Area:' + event);\n    this.updateSettings(\"area\", event);\n    this.updates();\n  }\n\n  handlePercentChange = (event) => {\n    console.log('Percent:' + event);\n    this.updateSettings(\"percent\", event);\n    this.updates();\n  }\n\n  handleCurrencyChange = (event) => {\n      console.log(\"Currency:\", event);\n      this.updateSettings(\"currency\", event);\n      this.updates();\n  }\n\n  updates = () => {\n    fetch(spot)\n      .then( spotresults => {\n          return spotresults.json();\n      })\n      .then( spotdata => {\n          console.log(\"spotdata\", spotdata);\n          return fetch(control)\n      })\n      .then( controlresults => {\n          return controlresults.json();\n      })\n      .then( data => {\n          console.log(\"controldata\", data);\n          return fetch(tempc)\n      })\n      .then( tempresults => {\n          return tempresults.json();\n      })\n      .then( tempdata => {\n          console.log(\"tempc\", tempdata);\n          return fetch(hourc)\n      })\n      .then( hourresults => {\n          return hourresults.json();\n      })\n      .then( hourdata => {\n          console.log(\"hourc\", hourdata);\n      })\n      .catch(err => {\n        console.log(err);\n        if (err.name === 'AbortError') return;\n        throw err;\n      });\n  }\n\n  getDsmText = (what) => {\n    if (what !== undefined) {\n        return what === 1 ? \"Elnätsbolag styr\" : \"Elnätsbolag styr ej\";\n    }\n  }\n\n  getModeText = (what) => {\n    if (what !== undefined) {\n        return what === 1 ? \"Du styr enligt elpris\" : \"Du styr ej enligt elpris\";\n    }\n  }\n\n  getModeVariant = (what) => {\n      //console.log(what, typeof(what));\n    if (what !== undefined) {\n      return what === 1 ? \"success\" : \"danger\";\n    }\n  }\n\n  handleControlChange = (what, event) => {\n      console.log(what, event);\n    event.preventDefault();\n    if (what !== undefined) {\n      let whatNow = what === 1 ? 0 : 1;\n      console.log(\"Det var \" + what + \" Ska nu vara: \", whatNow)\n      this.updateSettings(\"percenton\", whatNow);\n      this.updates();\n    }\n  }\n\n  handleDsmChange = (what, event) => {\n    console.log(\"Dsm: \", what, event);\n    event.preventDefault();\n    if (what !== undefined) {\n      let whatNow = what === 1 ? 0 : 1;\n      console.log(\"Det var \" + what + \" Ska nu vara: \", whatNow)\n      this.updateSettings(\"dsmon\", whatNow);\n      this.updates();\n    }\n  }\n\n  handleFromChange = (event) => {\n      console.log(\"From:\", getDateISO(event));\n      this.updateSettings(\"awayfrom\", getDateISO(event));\n      let dateval = new Date(getDateISO(event));\n      this.setState({startDate: dateval});\n      this.updates();\n  }\n\n  handleToChange = (event) => {\n      console.log(\"To:\", getDateISO(event));\n      this.updateSettings(\"awayto\", getDateISO(event));\n      let dateval = new Date(getDateISO(event));\n      this.setState({toDate: dateval});\n      this.updates();\n  }\n\n  updateSettings = (col, val) => {\n    console.log(col, val);\n    fetch(urledit, {\n      method: 'POST',\n      body: 'column=' + col + '&value=' + val+ '&id=' + 1,\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    })\n    .then(res => {\n      console.log(res);\n      if (res.status === 200) {\n        console.log(\"Uppdaterat\", col, val);\n        if (val === 'null') {\n            val = \"\";\n        }\n        this.setState({\n          [col]: val\n        });\n        console.log(this.state);\n        if (col === 'awayfrom' || col === 'awayto') {\n            console.log(\"FÖRE CHECK\", this.state);\n            this.checkAway(this.state.awayfrom, this.state.awayto);\n        }\n      } else {\n        const error = new Error(res.error);\n        throw error;\n      }\n    })\n    .catch(err => {\n      console.error(err);\n    });\n  }\n\n  render() {\n    let percenttext = <span>Styrprocent: <span className='redtext'>{ this.state.percent }</span> &#37;</span>;\n    let areatext = <span>Elprisområde <span className='redtext'>{ this.state.area }</span></span>;\n    let currencytext = <span>Valuta <span className='redtext'>{ this.state.currency }</span></span>;\n    //let lattext = <span>Latitud <span className='redtext'>{ this.state.lat }</span></span>;\n    //let longtext = <span>Longitud <span className='redtext'>{ this.state.long }</span></span>;\n    let fromtext = <span><span className='twofive'>Bortrest från: </span><span className='redtext'>{ this.state.awayfrom }</span></span>;\n    let totext = <span><span className='twofive'>Bortrest till: </span><span className='redtext'>{ this.state.awayto }</span></span>;\n\n    return (\n      <div className=\"hub-page\">\n        <h1>Inställningar</h1>\n        <div className=\"d-flex flex-column\">\n          <div className=\"dropContainer\">\n            <ToggleButton type=\"checkbox\" className=\"settings-toggle\" onClick={this.handleControlChange.bind(this, this.state.percenton)} variant={this.getModeVariant(this.state.percenton)} >\n              {this.getModeText(this.state.percenton)}\n            </ToggleButton>\n          </div>\n          <DropdownButton id=\"dropdown-percent\" onSelect={this.handlePercentChange} title={percenttext}>\n            <Dropdown.Item eventKey=\"0\">0</Dropdown.Item>\n            <Dropdown.Item eventKey=\"1\">1</Dropdown.Item>\n            <Dropdown.Item eventKey=\"2\">2</Dropdown.Item>\n            <Dropdown.Item eventKey=\"3\">3</Dropdown.Item>\n            <Dropdown.Item eventKey=\"4\">4</Dropdown.Item>\n            <Dropdown.Item eventKey=\"5\">5</Dropdown.Item>\n            <Dropdown.Item eventKey=\"6\">6</Dropdown.Item>\n            <Dropdown.Item eventKey=\"7\">7</Dropdown.Item>\n            <Dropdown.Item eventKey=\"8\">8</Dropdown.Item>\n            <Dropdown.Item eventKey=\"9\">9</Dropdown.Item>\n            <Dropdown.Item eventKey=\"10\">10</Dropdown.Item>\n            <Dropdown.Item eventKey=\"11\">11</Dropdown.Item>\n            <Dropdown.Item eventKey=\"12\">12</Dropdown.Item>\n            <Dropdown.Item eventKey=\"13\">13</Dropdown.Item>\n            <Dropdown.Item eventKey=\"14\">14</Dropdown.Item>\n            <Dropdown.Item eventKey=\"15\">15</Dropdown.Item>\n            <Dropdown.Item eventKey=\"16\">16</Dropdown.Item>\n            <Dropdown.Item eventKey=\"17\">17</Dropdown.Item>\n            <Dropdown.Item eventKey=\"18\">18</Dropdown.Item>\n            <Dropdown.Item eventKey=\"19\">19</Dropdown.Item>\n            <Dropdown.Item eventKey=\"20\">20</Dropdown.Item>\n        </DropdownButton>\n          <div className=\"dropContainer\">\n            <ToggleButton type=\"checkbox\" className=\"settings-toggle\" onClick={this.handleDsmChange.bind(this, this.state.dsmon)} variant={this.getModeVariant(this.state.dsmon)} >\n              {this.getDsmText(this.state.dsmon)}\n            </ToggleButton>\n          </div>\n        </div>\n        <div className=\"btn-light btn-block\">\n          <DatePicker\n            customInput={<CustomInput placeholderText={fromtext} />}\n            selected={this.state.startDate}\n            dateFormat=\"yyyy-MM-dd\"\n            locale=\"sv\"\n            className=\".btn-primary datefrom\"\n            calendarClassName=\"datefrom\"\n            showWeekNumbers\n            minDate={new Date()}\n            onChange={this.handleFromChange}\n          /></div>\n          <div className=\"btn-light btn-block\">\n          <DatePicker\n            customInput={<CustomInput placeholderText={totext} />}\n            selected={this.state.toDate}\n            dateFormat=\"yyyy-MM-dd\"\n            locale=\"sv\"\n            className=\".btn-primary dateto\"\n            calendarClassName=\"dateto\"\n            minDate={new Date(this.state.awayfrom)}\n            showWeekNumbers\n            onChange={this.handleToChange}\n          />\n        </div>\n        <DropdownButton id=\"dropdown-area\" onSelect={this.handleAreaChange} title={areatext}>\n            <Dropdown.Item eventKey=\"SE1\">SE1</Dropdown.Item>\n            <Dropdown.Item eventKey=\"SE2\">SE2</Dropdown.Item>\n            <Dropdown.Item eventKey=\"SE3\">SE3</Dropdown.Item>\n            <Dropdown.Item eventKey=\"SE4\">SE4</Dropdown.Item>\n            <Dropdown.Item eventKey=\"SP1\">SP1</Dropdown.Item>\n            <Dropdown.Item eventKey=\"DK1\">DK1</Dropdown.Item>\n            <Dropdown.Item eventKey=\"EE\">EE</Dropdown.Item>\n            <Dropdown.Item eventKey=\"FI\">FI</Dropdown.Item>\n            <Dropdown.Item eventKey=\"LT\">LT</Dropdown.Item>\n            <Dropdown.Item eventKey=\"LV\">LV</Dropdown.Item>\n            <Dropdown.Item eventKey=\"NO1\">NO1</Dropdown.Item>\n            <Dropdown.Item eventKey=\"NO2\">NO2</Dropdown.Item>\n            <Dropdown.Item eventKey=\"NO3\">NO3</Dropdown.Item>\n            <Dropdown.Item eventKey=\"NO4\">NO4</Dropdown.Item>\n            <Dropdown.Item eventKey=\"NO5\">NO5</Dropdown.Item>\n        </DropdownButton>\n        <DropdownButton id=\"dropdown-currency\" onSelect={this.handleCurrencyChange} title={currencytext}>\n            <Dropdown.Item eventKey=\"SEK\">SEK</Dropdown.Item>\n            <Dropdown.Item eventKey=\"DKK\">DKK</Dropdown.Item>\n            <Dropdown.Item eventKey=\"NOK\">NOK</Dropdown.Item>\n            <Dropdown.Item eventKey=\"EUR\">EUR</Dropdown.Item>\n        </DropdownButton>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}