{"version":3,"sources":["sensors/Rooms.js"],"names":["baseapi","window","location","hostname","rooms","add","rs","sens","Rooms","fetchRooms","fetch","then","response","json","result","temp","console","log","setState","state","map","one","sensor","push","usedsensors","response2","result2","temp2","includes","remainsensors","length","buttontext","response3","result3","temp3","sensorid","merged","concat","addRoom","roomname","newrooms","sensors","bind","this","items","className","item","key","id","where","roomid","divided","tempis","toFixed","toString","replace","to","variant","size","block","should","onClick","Component"],"mappings":"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","file":"static/js/7.52dacc7f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport \"../hub/Hub.css\";\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\n\nconst baseapi = 'http://' + window.location.hostname + ':1337';\nconst rooms = baseapi + \"/rooms\";\nconst add = baseapi + \"/addroom\";\nconst rs = baseapi + \"/roomssensors\";\nconst sens = baseapi + \"/showsensors\";\n\nexport default class Rooms extends Component {\n  constructor() {\n    super();\n    this.state = {\n      roomname: '',\n      rooms: [],\n      newrooms: [],\n      sensors: [],\n      usedsensors: [],\n      remainsensors: [],\n      buttontext: \"Lägg till rum\"\n    }\n    this.addRoom = this.addRoom.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchRooms();\n  }\n\n  fetchRooms =() => {\n    fetch(rs)\n    .then(response => {\n      return response.json();\n    })\n    .then(result => {\n      let temp = [];\n      console.log(\"result\", result);\n      this.setState({rooms: result});\n      console.log(\"this.state.rooms\", this.state.rooms);\n      result.map((one) => {\n        if (one.sensor) {\n          temp.push(one.sensor);\n          return undefined;\n        }\n        return undefined;\n      })\n      this.setState({usedsensors: temp});\n      return fetch(sens)\n    })\n    .then(response2 => {\n      return response2.json();\n    })\n    .then(result2 => {\n      let temp2 = [];\n      result2.map((one) => {\n        if (this.state.usedsensors.includes(one.sensor) === false) {\n          temp2.push(one.sensor);\n          return undefined;\n        }\n        return undefined;\n      })\n      this.setState({remainsensors: temp2});\n      console.log(\"JAA\", this.state.remainsensors);\n      if (this.state.remainsensors.length < 1) {\n        this.setState({buttontext: \"Det finns inga lediga sensorer\"});\n      }\n      return fetch(rooms)\n    })\n    .then(response3 => {\n      return response3.json();\n    })\n    .then(result3 => {\n      let temp3 = [];\n      result3.map((one) => {\n        console.log(one);\n        if (one.sensorid == null) {\n          temp3.push(one);\n          return undefined;\n        }\n        return undefined;\n      })\n      let first = this.state.rooms;\n      let merged = first.concat(temp3);\n      console.log(temp3, merged);\n      this.setState({rooms: merged});\n    })\n  }\n\n  addRoom = () => {\n    if (this.state.remainsensors.length > 0) {\n      console.log(\"JAA\", this.state.remainsensors);\n      fetch(add)\n      .then(response => {\n        console.log(\"response\", response);\n        return response.json();\n      })\n      .then(result => {\n        console.log(\"result\", typeof(result), result, result[0]);\n        this.fetchRooms();\n      })\n    }\n  }\n\n  render() {\n    let items = this.state.rooms;\n    console.log(items);\n\n    return (\n      <div className=\"zones-page\">\n          <h1><span className=\"tempis\">Ärvärde</span>Rum<span className=\"should\">Börvärde</span></h1>\n          <div>\n            {items.map(item => {\n              let key = item.sensor ? item.sensor : item.id;\n              let where = item.roomid ? item.roomid : item.id;\n              let tis = item.tempis ? item.tempis.toFixed(1) : \"\";\n              let divided = tis.toString();\n              divided = divided.replace(\".\", \",\");\n                return <span key={key}>\n                <Link to={`/room/${ where }`} className=\"btn btn-block\"><Button variant=\"light\" size=\"lg\" block><span className=\"tempis\">{divided} &deg;C</span> <span className=\"zone\">{item.roomname}</span> <span className=\"should\">{item.should} &deg;C</span></Button></Link></span>\n            }\n            )}\n          <span className=\"btn btn-block\"><Button variant=\"light\" size=\"lg\" block onClick={this.addRoom}>{this.state.buttontext}</Button></span>\n          </div>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}